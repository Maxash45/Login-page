name: Docker Image CI

on:
  push:
    branches: [ "main" ]name: Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Change this if you want to deploy from another branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Build, Tag, and Push Docker Image to ECR
        env:
          IMAGE_TAG: latest  # You can use Git SHA with `IMAGE_TAG=$(git rev-parse --short HEAD)`
        run: |
          REPO_URI=${{ secrets.ECR_REPOSITORY }}
          IMAGE_URI="$REPO_URI:$IMAGE_TAG"

          # Build the Docker image
          docker build -t $IMAGE_URI .

          # Push the image to ECR
          docker push $IMAGE_URI

          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Update ECS Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment

  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
